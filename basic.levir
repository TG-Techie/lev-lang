// struct Point:
//     x: uint32
//     y: uint32

struct(mod_main_Point, mbrs(
    mbr(x, uint32),
    mbr(y, uint32),
))

// class Counter:
//     _count: uint32

class(mod_main_Counter, mbrs(
    mbr(_count, uint32)
))

// def main () -> uint32:
//     foo = Counter{_count:6u32}
//     foombr1 = foo._count
//     return foombr1

fn(main, uint32,
    args(  ),
    locals( lcl(foo, mod_main_Counter), lcl(foombr1, uint32), lcl(foombr2, uint32) ),
    frame(
        asnvar(foo, mod_main_Counter, new(mod_main_Counter, {litrl(uint32, 6)}))
        printf("1rc: %llu\n", var_foo->rc);
        asnvar(foombr1, uint32,
            getmbr(_count, uint32,
                getvar(foo, mod_main_Counter), mod_main_Counter
            )
        )
        printf("2rc: %llu\n", var_foo->rc);
        printf("%d\n", var_foo->content.mbr__count.native);
        printf("3rc: %llu\n", var_foo->rc);
        // asnmbr(_count, uint32,
        //     getvar(foo, mod_main_Counter), mod_main_Counter,
        //     litrl(uint32, 77)
        // )
        printf("4rc: %llu\n", var_foo->rc);
        printf("%d\n", var_foo->content.mbr__count.native);
        asnvar(foombr2, uint32,
            getmbr(_count, uint32,
                getvar(foo, mod_main_Counter), mod_main_Counter
            )
        )
        printf("5rc: %llu\n", var_foo->rc);
        ret(uint32, getvar(foombr1, uint32))
    )
)
