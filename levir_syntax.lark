start: item+

// cminus cannot assign to mebers of exprssion. it must assing to a local

item: classdef | structdef | fndef

list{val, sep}: val (sep val)* sep?

classdef: "class" "("  typename "," mbrs ")"
structdef: "struct" "(" typename "," mbrs ")"
fndef: "fn" "(" fnname "," rettype "," args "," locals "," frame ")"

mbrs: "mbrs" "(" list{mbr, ","} ")"
mbr: "mbr" "(" name "," type ")"


args: "args" "(" list{arg, ","}? ")"
arg: "arg" "(" name "," type ")"

locals: "locals" "(" list{lcl, ","}? ")"
lcl: "lcl" "(" name "," type ")"

frame: "frame" "(" stmt+ ")"

stmt: asnvar_stmt   | asnmbr_stmt   | ret_stmt  | brk_stmt
    | cont_stmt     | loop_stmt     | dbg_stmt
asnvar_stmt: "asnvar" "(" varname "," type "," expr ")"
asnmbr_stmt: "asnmbr" "(" mbrname "," mbrtype "," expr "," vartype "," expr ")"

ret_stmt: "ret" "(" type "," expr ")"
brk_stmt: "brk"
cont_stmt: "cont"
loop_stmt: "loop" "(" stmt* ")"

dbg_stmt: "dbg" "(" name ("(" list{ dbg_arg, ","} ")")? ")"
dbg_arg:  c_symbol? (name | expr | literal) c_symbol?
c_symbol: /\*\&/

expr: getvar_expr | call_expr | getmbr_expr
    | new_expr | litrl_expr

getvar_expr: "getvar" "(" varname "," type ")"
getmbr_expr: "getmbr" "(" mbrname "," mbrtype "," expr "," type ")"

call_expr: "call" "(" fnname "," "(" list{expr, ","} ")" ")"
new_expr: "new" "(" type "," new_body ")"
litrl_expr: "litrl" "(" type "," literal ")"

new_body: "{" list{expr, ","} "}"

name: IDENT

type: IDENT
typename: IDENT

mbrtype: IDENT
mbrname: IDENT

vartype:IDENT
varname:IDENT

fnname: IDENT
rettype: IDENT

literal: STRING | LONGSTRING | FLOAT | INT

DBG_IDENT: /dbg_[_A-z0-9]*/
IDENT: /[_A-z][_A-z0-9]*/

STRING: /("(?!"").*?(?<!\\)(\\\\)*?"|'(?!'').*?(?<!\\)(\\\\)*?')/i
LONGSTRING: /(""".*?(?<!\\)(\\\\)*?"""|'''.*?(?<!\\)(\\\\)*?''')/is
FLOAT: /((\d+\.\d*|\.\d+)(e[-+]?\d+)?|\d+(e[-+]?\d+))/i
INT: /[0-9]+/i


%ignore COMMENT
// %ignore C_MACRO
%ignore /[ \n\t]+/

C_MACRO: /#[A-z]+ (?:.*\\\r?\n)*[^\n]*\n/ // c #def or #incl macros

COMMENT: MULTILINE_COMMENT | SINGLELINE_COMMENT
MULTILINE_COMMENT: /\/\/[^\n]*/ // single line c comment
SINGLELINE_COMMENT: /\/\*[\s\S]*?\*\// // multi line c comment
